<?php

namespace Rapid7\InsightVM\Api\Model;

class VulnerabilityCvssV2
{
    /**
    * Access Complexity (AC) component which measures the complexity of the attack required to exploit the vulnerability once an attacker has gained access to the target system.
    | Access Complexity       | Description                                                              |
    | ----------------------- | ------------------------------------------------------------------------ |
    | High (`"H"`)            | Specialized access conditions exist.                                     |
    | Medium (`"M"`)          | The access conditions are somewhat specialized.                          |
    | Low (`"L"`)             | Specialized access conditions or extenuating circumstances do not exist. |
    *
    * @var string
    */
    protected $accessComplexity;
    /**
    * Access Vector (Av) component which reflects how the vulnerability is exploited.
    | Access Vector              | Description |
    | -------------------------- | ----------- |
    | Local (`"L"`)              | A vulnerability exploitable with only local access requires the attacker to have either physical access to the vulnerable system or a local (shell) account. |
    | Adjacent Network (`"A"`)   | A vulnerability exploitable with adjacent network access requires the attacker to have access to either the broadcast or collision domain of the vulnerable software. |
    | Network (`"N"`)            | A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access. Such a vulnerability is often termed "remotely exploitable". |
    
    *
    * @var string
    */
    protected $accessVector;
    /**
    * Authentication (Au) component which measures the number of times an attacker must authenticate to a target in order to exploit a vulnerability.
    | Authentication       | Description |
    | -------------------- | ----------- |
    | Multiple (`"M"`)     | Exploiting the vulnerability requires that the attacker authenticate two or more times, even if the same credentials are used each time. |
    | Single (`"S"`)       | The vulnerability requires an attacker to be logged into the system.                                                                     |
    | None (`"N"`)         | Authentication is not required to exploit the vulnerability.                                                                             |
    *
    * @var string
    */
    protected $authentication;
    /**
    * Availability Impact (A) component which measures the impact to availability of a successfully exploited vulnerability.
    | Availability Impact        | Description  |
    | -------------------------- | ------------ |
    | None (`"N"`)               | There is no impact to the availability of the system. |
    | Partial (`"P"`)            | There is reduced performance or interruptions in resource availability. |
    | Complete (`"C"`)           | There is a total shutdown of the affected resource. The attacker can render the resource completely unavailable. |
    *
    * @var string
    */
    protected $availabilityImpact;
    /**
    * Confidentiality Impact (C) component which measures the impact on confidentiality of a successfully exploited vulnerability.
    | Confidentiality Impact     | Description  |
    | -------------------------- | ------------ |
    | None (`"N"`)               | There is no impact to the confidentiality of the system. |
    | Partial (`"P"`)            | There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained. |
    | Complete (`"C"`)           | There is total information disclosure, resulting in all system files being revealed. The attacker is able to read all of the system's data (memory, files, etc.) |
    *
    * @var string
    */
    protected $confidentialityImpact;
    /**
     * The CVSS exploit score.
     *
     * @var float
     */
    protected $exploitScore;
    /**
     * The CVSS impact score.
     *
     * @var float
     */
    protected $impactScore;
    /**
    * Integrity Impact (I) component measures the impact to integrity of a successfully exploited vulnerability.
    | Integrity Impact           | Description  |
    | -------------------------- | ------------ |
    | None (`"N"`)               | There is no impact to the integrity of the system. |
    | Partial (`"P"`)            | Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited. |
    | Complete (`"C"`)           | There is a total compromise of system integrity. There is a complete loss of system protection, resulting in the entire system being compromised. The attacker is able to modify any files on the target system. |
    *
    * @var string
    */
    protected $integrityImpact;
    /**
     * The CVSS score, which ranges from 0-10.
     *
     * @var float
     */
    protected $score;
    /**
     * The <a target="_blank" href="https://www.first.org/cvss/v2/guide">CVSS v2</a> vector.
     *
     * @var string
     */
    protected $vector;
    /**
    * Access Complexity (AC) component which measures the complexity of the attack required to exploit the vulnerability once an attacker has gained access to the target system.
    | Access Complexity       | Description                                                              |
    | ----------------------- | ------------------------------------------------------------------------ |
    | High (`"H"`)            | Specialized access conditions exist.                                     |
    | Medium (`"M"`)          | The access conditions are somewhat specialized.                          |
    | Low (`"L"`)             | Specialized access conditions or extenuating circumstances do not exist. |
    *
    * @return string
    */
    public function getAccessComplexity() : string
    {
        return $this->accessComplexity;
    }
    /**
    * Access Complexity (AC) component which measures the complexity of the attack required to exploit the vulnerability once an attacker has gained access to the target system.
    | Access Complexity       | Description                                                              |
    | ----------------------- | ------------------------------------------------------------------------ |
    | High (`"H"`)            | Specialized access conditions exist.                                     |
    | Medium (`"M"`)          | The access conditions are somewhat specialized.                          |
    | Low (`"L"`)             | Specialized access conditions or extenuating circumstances do not exist. |
    *
    * @param string $accessComplexity
    *
    * @return self
    */
    public function setAccessComplexity(string $accessComplexity) : self
    {
        $this->accessComplexity = $accessComplexity;
        return $this;
    }
    /**
    * Access Vector (Av) component which reflects how the vulnerability is exploited.
    | Access Vector              | Description |
    | -------------------------- | ----------- |
    | Local (`"L"`)              | A vulnerability exploitable with only local access requires the attacker to have either physical access to the vulnerable system or a local (shell) account. |
    | Adjacent Network (`"A"`)   | A vulnerability exploitable with adjacent network access requires the attacker to have access to either the broadcast or collision domain of the vulnerable software. |
    | Network (`"N"`)            | A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access. Such a vulnerability is often termed "remotely exploitable". |
    
    *
    * @return string
    */
    public function getAccessVector() : string
    {
        return $this->accessVector;
    }
    /**
    * Access Vector (Av) component which reflects how the vulnerability is exploited.
    | Access Vector              | Description |
    | -------------------------- | ----------- |
    | Local (`"L"`)              | A vulnerability exploitable with only local access requires the attacker to have either physical access to the vulnerable system or a local (shell) account. |
    | Adjacent Network (`"A"`)   | A vulnerability exploitable with adjacent network access requires the attacker to have access to either the broadcast or collision domain of the vulnerable software. |
    | Network (`"N"`)            | A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access. Such a vulnerability is often termed "remotely exploitable". |
    
    *
    * @param string $accessVector
    *
    * @return self
    */
    public function setAccessVector(string $accessVector) : self
    {
        $this->accessVector = $accessVector;
        return $this;
    }
    /**
    * Authentication (Au) component which measures the number of times an attacker must authenticate to a target in order to exploit a vulnerability.
    | Authentication       | Description |
    | -------------------- | ----------- |
    | Multiple (`"M"`)     | Exploiting the vulnerability requires that the attacker authenticate two or more times, even if the same credentials are used each time. |
    | Single (`"S"`)       | The vulnerability requires an attacker to be logged into the system.                                                                     |
    | None (`"N"`)         | Authentication is not required to exploit the vulnerability.                                                                             |
    *
    * @return string
    */
    public function getAuthentication() : string
    {
        return $this->authentication;
    }
    /**
    * Authentication (Au) component which measures the number of times an attacker must authenticate to a target in order to exploit a vulnerability.
    | Authentication       | Description |
    | -------------------- | ----------- |
    | Multiple (`"M"`)     | Exploiting the vulnerability requires that the attacker authenticate two or more times, even if the same credentials are used each time. |
    | Single (`"S"`)       | The vulnerability requires an attacker to be logged into the system.                                                                     |
    | None (`"N"`)         | Authentication is not required to exploit the vulnerability.                                                                             |
    *
    * @param string $authentication
    *
    * @return self
    */
    public function setAuthentication(string $authentication) : self
    {
        $this->authentication = $authentication;
        return $this;
    }
    /**
    * Availability Impact (A) component which measures the impact to availability of a successfully exploited vulnerability.
    | Availability Impact        | Description  |
    | -------------------------- | ------------ |
    | None (`"N"`)               | There is no impact to the availability of the system. |
    | Partial (`"P"`)            | There is reduced performance or interruptions in resource availability. |
    | Complete (`"C"`)           | There is a total shutdown of the affected resource. The attacker can render the resource completely unavailable. |
    *
    * @return string
    */
    public function getAvailabilityImpact() : string
    {
        return $this->availabilityImpact;
    }
    /**
    * Availability Impact (A) component which measures the impact to availability of a successfully exploited vulnerability.
    | Availability Impact        | Description  |
    | -------------------------- | ------------ |
    | None (`"N"`)               | There is no impact to the availability of the system. |
    | Partial (`"P"`)            | There is reduced performance or interruptions in resource availability. |
    | Complete (`"C"`)           | There is a total shutdown of the affected resource. The attacker can render the resource completely unavailable. |
    *
    * @param string $availabilityImpact
    *
    * @return self
    */
    public function setAvailabilityImpact(string $availabilityImpact) : self
    {
        $this->availabilityImpact = $availabilityImpact;
        return $this;
    }
    /**
    * Confidentiality Impact (C) component which measures the impact on confidentiality of a successfully exploited vulnerability.
    | Confidentiality Impact     | Description  |
    | -------------------------- | ------------ |
    | None (`"N"`)               | There is no impact to the confidentiality of the system. |
    | Partial (`"P"`)            | There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained. |
    | Complete (`"C"`)           | There is total information disclosure, resulting in all system files being revealed. The attacker is able to read all of the system's data (memory, files, etc.) |
    *
    * @return string
    */
    public function getConfidentialityImpact() : string
    {
        return $this->confidentialityImpact;
    }
    /**
    * Confidentiality Impact (C) component which measures the impact on confidentiality of a successfully exploited vulnerability.
    | Confidentiality Impact     | Description  |
    | -------------------------- | ------------ |
    | None (`"N"`)               | There is no impact to the confidentiality of the system. |
    | Partial (`"P"`)            | There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained. |
    | Complete (`"C"`)           | There is total information disclosure, resulting in all system files being revealed. The attacker is able to read all of the system's data (memory, files, etc.) |
    *
    * @param string $confidentialityImpact
    *
    * @return self
    */
    public function setConfidentialityImpact(string $confidentialityImpact) : self
    {
        $this->confidentialityImpact = $confidentialityImpact;
        return $this;
    }
    /**
     * The CVSS exploit score.
     *
     * @return float
     */
    public function getExploitScore() : float
    {
        return $this->exploitScore;
    }
    /**
     * The CVSS exploit score.
     *
     * @param float $exploitScore
     *
     * @return self
     */
    public function setExploitScore(float $exploitScore) : self
    {
        $this->exploitScore = $exploitScore;
        return $this;
    }
    /**
     * The CVSS impact score.
     *
     * @return float
     */
    public function getImpactScore() : float
    {
        return $this->impactScore;
    }
    /**
     * The CVSS impact score.
     *
     * @param float $impactScore
     *
     * @return self
     */
    public function setImpactScore(float $impactScore) : self
    {
        $this->impactScore = $impactScore;
        return $this;
    }
    /**
    * Integrity Impact (I) component measures the impact to integrity of a successfully exploited vulnerability.
    | Integrity Impact           | Description  |
    | -------------------------- | ------------ |
    | None (`"N"`)               | There is no impact to the integrity of the system. |
    | Partial (`"P"`)            | Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited. |
    | Complete (`"C"`)           | There is a total compromise of system integrity. There is a complete loss of system protection, resulting in the entire system being compromised. The attacker is able to modify any files on the target system. |
    *
    * @return string
    */
    public function getIntegrityImpact() : string
    {
        return $this->integrityImpact;
    }
    /**
    * Integrity Impact (I) component measures the impact to integrity of a successfully exploited vulnerability.
    | Integrity Impact           | Description  |
    | -------------------------- | ------------ |
    | None (`"N"`)               | There is no impact to the integrity of the system. |
    | Partial (`"P"`)            | Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited. |
    | Complete (`"C"`)           | There is a total compromise of system integrity. There is a complete loss of system protection, resulting in the entire system being compromised. The attacker is able to modify any files on the target system. |
    *
    * @param string $integrityImpact
    *
    * @return self
    */
    public function setIntegrityImpact(string $integrityImpact) : self
    {
        $this->integrityImpact = $integrityImpact;
        return $this;
    }
    /**
     * The CVSS score, which ranges from 0-10.
     *
     * @return float
     */
    public function getScore() : float
    {
        return $this->score;
    }
    /**
     * The CVSS score, which ranges from 0-10.
     *
     * @param float $score
     *
     * @return self
     */
    public function setScore(float $score) : self
    {
        $this->score = $score;
        return $this;
    }
    /**
     * The <a target="_blank" href="https://www.first.org/cvss/v2/guide">CVSS v2</a> vector.
     *
     * @return string
     */
    public function getVector() : string
    {
        return $this->vector;
    }
    /**
     * The <a target="_blank" href="https://www.first.org/cvss/v2/guide">CVSS v2</a> vector.
     *
     * @param string $vector
     *
     * @return self
     */
    public function setVector(string $vector) : self
    {
        $this->vector = $vector;
        return $this;
    }
}