<?php

namespace Rapid7\InsightVM\Api\Model;

class VulnerabilityEvents
{
    /**
     * Generates an alert for vulnerability results of confirmed vulnerabilties. A vulnerability is "confirmed" when asset-specific vulnerability tests, such as exploits, produce positive results. Default value is `true`.
     *
     * @var bool
     */
    protected $confirmedVulnerabilities;
    /**
     * Generates an alert for vulnerability results of potential vulnerabilties. A vulnerability is "potential" if a check for a potential vulnerabilty is positive. Default value is `true`.
     *
     * @var bool
     */
    protected $potentialVulnerabilities;
    /**
     * Generates an alert for vulnerability results of unconfirmed vulnerabilties. A vulnerability is "unconfirmed" when a version of a scanned service or software is known to be vulnerable, but there is no positive verification. Default value is `true`.
     *
     * @var bool
     */
    protected $unconfirmedVulnerabilities;
    /**
     * Generates an alert for vulnerability results of the selected vulnerability severity. Default value is `"any_severity"`.
     *
     * @var string
     */
    protected $vulnerabilitySeverity;
    /**
     * Generates an alert for vulnerability results of confirmed vulnerabilties. A vulnerability is "confirmed" when asset-specific vulnerability tests, such as exploits, produce positive results. Default value is `true`.
     *
     * @return bool
     */
    public function getConfirmedVulnerabilities() : bool
    {
        return $this->confirmedVulnerabilities;
    }
    /**
     * Generates an alert for vulnerability results of confirmed vulnerabilties. A vulnerability is "confirmed" when asset-specific vulnerability tests, such as exploits, produce positive results. Default value is `true`.
     *
     * @param bool $confirmedVulnerabilities
     *
     * @return self
     */
    public function setConfirmedVulnerabilities(bool $confirmedVulnerabilities) : self
    {
        $this->confirmedVulnerabilities = $confirmedVulnerabilities;
        return $this;
    }
    /**
     * Generates an alert for vulnerability results of potential vulnerabilties. A vulnerability is "potential" if a check for a potential vulnerabilty is positive. Default value is `true`.
     *
     * @return bool
     */
    public function getPotentialVulnerabilities() : bool
    {
        return $this->potentialVulnerabilities;
    }
    /**
     * Generates an alert for vulnerability results of potential vulnerabilties. A vulnerability is "potential" if a check for a potential vulnerabilty is positive. Default value is `true`.
     *
     * @param bool $potentialVulnerabilities
     *
     * @return self
     */
    public function setPotentialVulnerabilities(bool $potentialVulnerabilities) : self
    {
        $this->potentialVulnerabilities = $potentialVulnerabilities;
        return $this;
    }
    /**
     * Generates an alert for vulnerability results of unconfirmed vulnerabilties. A vulnerability is "unconfirmed" when a version of a scanned service or software is known to be vulnerable, but there is no positive verification. Default value is `true`.
     *
     * @return bool
     */
    public function getUnconfirmedVulnerabilities() : bool
    {
        return $this->unconfirmedVulnerabilities;
    }
    /**
     * Generates an alert for vulnerability results of unconfirmed vulnerabilties. A vulnerability is "unconfirmed" when a version of a scanned service or software is known to be vulnerable, but there is no positive verification. Default value is `true`.
     *
     * @param bool $unconfirmedVulnerabilities
     *
     * @return self
     */
    public function setUnconfirmedVulnerabilities(bool $unconfirmedVulnerabilities) : self
    {
        $this->unconfirmedVulnerabilities = $unconfirmedVulnerabilities;
        return $this;
    }
    /**
     * Generates an alert for vulnerability results of the selected vulnerability severity. Default value is `"any_severity"`.
     *
     * @return string
     */
    public function getVulnerabilitySeverity() : string
    {
        return $this->vulnerabilitySeverity;
    }
    /**
     * Generates an alert for vulnerability results of the selected vulnerability severity. Default value is `"any_severity"`.
     *
     * @param string $vulnerabilitySeverity
     *
     * @return self
     */
    public function setVulnerabilitySeverity(string $vulnerabilitySeverity) : self
    {
        $this->vulnerabilitySeverity = $vulnerabilitySeverity;
        return $this;
    }
}