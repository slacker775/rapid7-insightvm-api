<?php

namespace Rapid7\InsightVM\Api\Model;

class Vulnerability
{
    /**
     * The date the vulnerability coverage was added. The format is an ISO 8601 date, `YYYY-MM-DD`.
     *
     * @var \DateTime
     */
    protected $added;
    /**
     * All vulnerability categories assigned to this vulnerability.
     *
     * @var string[]
     */
    protected $categories;
    /**
     * All <a target="_blank" href="https://cve.mitre.org/">CVE</a>s assigned to this vulnerability.
     *
     * @var string[]
     */
    protected $cves;
    /**
     * 
     *
     * @var VulnerabilityCvss
     */
    protected $cvss;
    /**
     * Whether the vulnerability can lead to Denial of Service (DoS).
     *
     * @var bool
     */
    protected $denialOfService;
    /**
     * 
     *
     * @var ContentDescription
     */
    protected $description;
    /**
     * The exploits that can be used to exploit a vulnerability.
     *
     * @var int
     */
    protected $exploits;
    /**
     * The identifier of the vulnerability.
     *
     * @var string
     */
    protected $id;
    /**
     * Hypermedia links to corresponding or related resources.
     *
     * @var Link[]
     */
    protected $links;
    /**
     * The malware kits that are known to be used to exploit the vulnerability.
     *
     * @var int
     */
    protected $malwareKits;
    /**
     * The last date the vulnerability was modified. The format is an ISO 8601 date, `YYYY-MM-DD`.
     *
     * @var \DateTime
     */
    protected $modified;
    /**
     * 
     *
     * @var PCI
     */
    protected $pci;
    /**
     * The date the vulnerability was first published or announced. The format is an ISO 8601 date, `YYYY-MM-DD`.
     *
     * @var \DateTime
     */
    protected $published;
    /**
     * The risk score of the vulnerability, rounded to a maximum of to digits of precision. If using the default Rapid7 Real Risk™ model, this value ranges from 0-1000.
     *
     * @var float
     */
    protected $riskScore;
    /**
     * The severity of the vulnerability, one of: `"Moderate"`, `"Severe"`, `"Critical"`.
     *
     * @var string
     */
    protected $severity;
    /**
     * The severity score of the vulnerability, on a scale of 0-10.
     *
     * @var int
     */
    protected $severityScore;
    /**
     * The title (summary) of the vulnerability.
     *
     * @var string
     */
    protected $title;
    /**
     * The date the vulnerability coverage was added. The format is an ISO 8601 date, `YYYY-MM-DD`.
     *
     * @return \DateTime
     */
    public function getAdded() : \DateTime
    {
        return $this->added;
    }
    /**
     * The date the vulnerability coverage was added. The format is an ISO 8601 date, `YYYY-MM-DD`.
     *
     * @param \DateTime $added
     *
     * @return self
     */
    public function setAdded(\DateTime $added) : self
    {
        $this->added = $added;
        return $this;
    }
    /**
     * All vulnerability categories assigned to this vulnerability.
     *
     * @return string[]
     */
    public function getCategories() : array
    {
        return $this->categories;
    }
    /**
     * All vulnerability categories assigned to this vulnerability.
     *
     * @param string[] $categories
     *
     * @return self
     */
    public function setCategories(array $categories) : self
    {
        $this->categories = $categories;
        return $this;
    }
    /**
     * All <a target="_blank" href="https://cve.mitre.org/">CVE</a>s assigned to this vulnerability.
     *
     * @return string[]
     */
    public function getCves() : array
    {
        return $this->cves;
    }
    /**
     * All <a target="_blank" href="https://cve.mitre.org/">CVE</a>s assigned to this vulnerability.
     *
     * @param string[] $cves
     *
     * @return self
     */
    public function setCves(array $cves) : self
    {
        $this->cves = $cves;
        return $this;
    }
    /**
     * 
     *
     * @return VulnerabilityCvss
     */
    public function getCvss() : VulnerabilityCvss
    {
        return $this->cvss;
    }
    /**
     * 
     *
     * @param VulnerabilityCvss $cvss
     *
     * @return self
     */
    public function setCvss(VulnerabilityCvss $cvss) : self
    {
        $this->cvss = $cvss;
        return $this;
    }
    /**
     * Whether the vulnerability can lead to Denial of Service (DoS).
     *
     * @return bool
     */
    public function getDenialOfService() : bool
    {
        return $this->denialOfService;
    }
    /**
     * Whether the vulnerability can lead to Denial of Service (DoS).
     *
     * @param bool $denialOfService
     *
     * @return self
     */
    public function setDenialOfService(bool $denialOfService) : self
    {
        $this->denialOfService = $denialOfService;
        return $this;
    }
    /**
     * 
     *
     * @return ContentDescription
     */
    public function getDescription() : ContentDescription
    {
        return $this->description;
    }
    /**
     * 
     *
     * @param ContentDescription $description
     *
     * @return self
     */
    public function setDescription(ContentDescription $description) : self
    {
        $this->description = $description;
        return $this;
    }
    /**
     * The exploits that can be used to exploit a vulnerability.
     *
     * @return int
     */
    public function getExploits() : int
    {
        return $this->exploits;
    }
    /**
     * The exploits that can be used to exploit a vulnerability.
     *
     * @param int $exploits
     *
     * @return self
     */
    public function setExploits(int $exploits) : self
    {
        $this->exploits = $exploits;
        return $this;
    }
    /**
     * The identifier of the vulnerability.
     *
     * @return string
     */
    public function getId() : string
    {
        return $this->id;
    }
    /**
     * The identifier of the vulnerability.
     *
     * @param string $id
     *
     * @return self
     */
    public function setId(string $id) : self
    {
        $this->id = $id;
        return $this;
    }
    /**
     * Hypermedia links to corresponding or related resources.
     *
     * @return Link[]
     */
    public function getLinks() : array
    {
        return $this->links;
    }
    /**
     * Hypermedia links to corresponding or related resources.
     *
     * @param Link[] $links
     *
     * @return self
     */
    public function setLinks(array $links) : self
    {
        $this->links = $links;
        return $this;
    }
    /**
     * The malware kits that are known to be used to exploit the vulnerability.
     *
     * @return int
     */
    public function getMalwareKits() : int
    {
        return $this->malwareKits;
    }
    /**
     * The malware kits that are known to be used to exploit the vulnerability.
     *
     * @param int $malwareKits
     *
     * @return self
     */
    public function setMalwareKits(int $malwareKits) : self
    {
        $this->malwareKits = $malwareKits;
        return $this;
    }
    /**
     * The last date the vulnerability was modified. The format is an ISO 8601 date, `YYYY-MM-DD`.
     *
     * @return \DateTime
     */
    public function getModified() : \DateTime
    {
        return $this->modified;
    }
    /**
     * The last date the vulnerability was modified. The format is an ISO 8601 date, `YYYY-MM-DD`.
     *
     * @param \DateTime $modified
     *
     * @return self
     */
    public function setModified(\DateTime $modified) : self
    {
        $this->modified = $modified;
        return $this;
    }
    /**
     * 
     *
     * @return PCI
     */
    public function getPci() : PCI
    {
        return $this->pci;
    }
    /**
     * 
     *
     * @param PCI $pci
     *
     * @return self
     */
    public function setPci(PCI $pci) : self
    {
        $this->pci = $pci;
        return $this;
    }
    /**
     * The date the vulnerability was first published or announced. The format is an ISO 8601 date, `YYYY-MM-DD`.
     *
     * @return \DateTime
     */
    public function getPublished() : \DateTime
    {
        return $this->published;
    }
    /**
     * The date the vulnerability was first published or announced. The format is an ISO 8601 date, `YYYY-MM-DD`.
     *
     * @param \DateTime $published
     *
     * @return self
     */
    public function setPublished(\DateTime $published) : self
    {
        $this->published = $published;
        return $this;
    }
    /**
     * The risk score of the vulnerability, rounded to a maximum of to digits of precision. If using the default Rapid7 Real Risk™ model, this value ranges from 0-1000.
     *
     * @return float
     */
    public function getRiskScore() : float
    {
        return $this->riskScore;
    }
    /**
     * The risk score of the vulnerability, rounded to a maximum of to digits of precision. If using the default Rapid7 Real Risk™ model, this value ranges from 0-1000.
     *
     * @param float $riskScore
     *
     * @return self
     */
    public function setRiskScore(float $riskScore) : self
    {
        $this->riskScore = $riskScore;
        return $this;
    }
    /**
     * The severity of the vulnerability, one of: `"Moderate"`, `"Severe"`, `"Critical"`.
     *
     * @return string
     */
    public function getSeverity() : string
    {
        return $this->severity;
    }
    /**
     * The severity of the vulnerability, one of: `"Moderate"`, `"Severe"`, `"Critical"`.
     *
     * @param string $severity
     *
     * @return self
     */
    public function setSeverity(string $severity) : self
    {
        $this->severity = $severity;
        return $this;
    }
    /**
     * The severity score of the vulnerability, on a scale of 0-10.
     *
     * @return int
     */
    public function getSeverityScore() : int
    {
        return $this->severityScore;
    }
    /**
     * The severity score of the vulnerability, on a scale of 0-10.
     *
     * @param int $severityScore
     *
     * @return self
     */
    public function setSeverityScore(int $severityScore) : self
    {
        $this->severityScore = $severityScore;
        return $this;
    }
    /**
     * The title (summary) of the vulnerability.
     *
     * @return string
     */
    public function getTitle() : string
    {
        return $this->title;
    }
    /**
     * The title (summary) of the vulnerability.
     *
     * @param string $title
     *
     * @return self
     */
    public function setTitle(string $title) : self
    {
        $this->title = $title;
        return $this;
    }
}